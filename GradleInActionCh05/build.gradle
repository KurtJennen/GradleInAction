ext.cargoGroup = 'org.codehaus.cargo'
ext.cargoVersion = '1.3.1'

configurations {
	cargo {
		description = 'Classpath for Cargo Ant tasks'
		visible = false
	}
}

configurations.cargo.resolutionStrategy {
	//failOnVersionConflict()
	force 'org.codehaus.cargo:cargo-ant:1.3.0'
	cacheDynamicVersionsFor 0, 'seconds' 
}

/*configurations.compile.resolutionStrategy {
	cacheChangingModulesFor 0, 'seconds' 
}*/

repositories {
	mavenCentral()
	/*maven {
		name 'Custom Maven Repository'
		url 'http://repository-gradle-in-action.forge.cloudbees.com/release/'
	}*/
	/*ivy {
		url 'http://repository.myenterprise.com/ivy/bundles/release'
		layout 'pattern', {
			artifact '[organization]/[module]/[revision]/[artifact]-[revision].[ext]'
			ivy '[organization]/[module]/[revision]/ivy-[revision].xml'
		}
	}*/
	flatDir(dir: "${System.properties['user.home']}/libs/cargo", name: 'Local libs directory')
}

dependencies {
	//cargo group: cargoGroup, name: 'cargo-core-uberjar', version: cargoVersion
	cargo "$cargoGroup:cargo-ant:$cargoVersion"
	/*cargo ("$cargoGroup:cargo-ant:$cargoVersion") {
		exclude group: 'xml-apis', module: 'xml-apis'
	}
	cargo 'xml-apis:xml-apis:2.0.2'*/
	
	/*cargo ("$cargoGroup:cargo-ant:$cargoVersion") {
		transitive = false
	}*/
	
	//cargo "org.codehaus.cargo:cargo-ant:1.+"
	
	//cargo fileTree(dir: "${System.properties['user.home']}/libs/cargo", include: '*.jar')
	
	/*cargo name: 'activation', version: '1.1'
	cargo name: 'ant', version: '1.7.1'
	cargo name: 'ant-launcher', version: '1.7.1'
	cargo name: 'cargo-ant', version: '1.3.1'
	cargo name: 'cargo-core-uberjar', version: '1.3.1'
	cargo name: 'commons-discovery', version: '0.4'
	cargo name: 'commons-logging', version: '1.0.4'
	cargo name: 'dom4j', version: '1.4'
	cargo name: 'isorelax', version: '20020414'
	cargo ':jaxb-api:2.1', ':jaxb-impl:2.1.13', ':jaxen:1.0-FCS', ':jdom:1.0', ':msv:20020414', ':relaxngDatatype:20020414',
			':saxpath:1.0-FCS', ':stax-api:1.0-2', ':xercesImpl:2.8.1', ':xml-apis:1.3.03'*/
}

task copyDependenciesToLocalDir(type: Copy) {
	from configurations.cargo.asFileTree
	into "${System.properties['user.home']}/libs/cargo"
}

task deployToLocalTomcat << {
	FileTree cargoDeps = configurations.getByName('cargo').asFileTree
	ant.taskdef(resource: 'cargo.tasks', classpath: cargoDeps.asPath)
	
	ant.cargo(containerId: 'tomcat7x', action: 'run', output: "$buildDir/output.log") {
		deployable(type: 'war', file: 'todo.war')
	}
	
	zipUrlInstaller(installUrl: 'http://archive.apache.org/disttomcat/tomcat-7/v7.0.32/bin/apache-tomcat-7.0.32.zip')
}

task printDependencies << {
	configurations.getByName('cargo').each { dependency ->
		println dependency
	}
}