buildscript {
	repositories {
		mavenCentral()
	}
	
	dependencies {
		classpath 'com.cloudbees:cloudbees-api-client:1.4.0'
	}
}

ext {
	apiUrl = 'https://api.cloudbees.com/api'
	apiFormat = 'xml'
	apiVersion = '1.0'
	apiKey = ''
	secret = ''
	appId = ''
	warFile = 'todo.war'
}

if(project.hasProperty('cloudbeesApiKey')) {
	ext.apiKey = project.property('cloudbeesApiKey')
}
if(project.hasProperty('cloudbeesApiSecret')) {
	ext.secret = project.property('cloudbeesApiSecret')
}

import com.cloudbees.api.ApplicationInfo
import com.cloudbees.api.BeesClient
import com.cloudbees.api.ApplicationDeployArchiveResponse

task cloudBeesAppInfo(description: 'Return the basic information about an application.', group: 'CloudBees') {
	inputs.property('apiKey', apiKey)
	inputs.property('secret', secret)
	inputs.property('appId', appId)
	
	doLast {
		BeesClient client = new BeesClient(apiUrl, apiKey, secret, apiFormat, apiVersion)
		
		ApplicationInfo info
		
		try {
			info = client.applicationInfo(appId)
		}
		catch(Exception e) {
			throw new GradleException(e.message)
		}
		
		logger.quiet "Application id : $info.id"
		logger.quiet "         title : $info.title"
		logger.quiet "       created : $info.created"
		logger.quiet "          urls : $info.urls"
		logger.quiet "        status : $info.status"
	}
}

task cloudBeesDeployWar(description: 'Deploys a new version of an application using a WAR archive file.', group: 'CloudBees') {
	inputs.property('apiKey', apiKey)
	inputs.property('secret', secret)
	inputs.property('appId', appId)
	inputs.file file(warFile)
	ext.message = project.hasProperty('message') ? project.message : null
	inputs.property('message', message)
	
	doLast {
		logger.quiet "Deploying WAR '$warFile' to application ID '$appId'  with message '$message'"
		
		BeesClient client = new BeesClient(apiUrl, apiKey, secret, apiFormat, apiVersion)
		
		ApplicationDeployArchiveResponse response
		
		try {
			response = client.applicationDeployWar(appId, null, message, file(warFile), null, null)
		}
		catch(Exception e) {
			throw new GradleException("Error: $e.message")
		}
		
		logger.quiet "Application uploaded successfully to: '$response.url'"
	}
}
